definitions:
  dto.AuctionCreateRequest:
    properties:
      end_time:
        description: 'format example: ''2025-03-05T07:00:00+07:00'''
        type: string
      item_id:
        type: integer
      start_price:
        type: number
    required:
    - end_time
    - item_id
    - start_price
    type: object
  dto.OfferCreateRequest:
    properties:
      auction_id:
        type: integer
      offer_amount:
        type: number
    type: object
  dto.UserLoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  dto.UserRegisterRequest:
    properties:
      address:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - name
    - password
    - username
    type: object
  dto.UserUpdateRequest:
    properties:
      address:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /auction:
    post:
      consumes:
      - application/json
      description: Create new auction
      parameters:
      - description: Auction Create Data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.AuctionCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Create Auction
      tags:
      - auction
  /auction/:
    get:
      consumes:
      - application/json
      description: Get auction list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Auction List
      tags:
      - auction
  /auction/{id}:
    get:
      consumes:
      - application/json
      description: Get auction detail
      parameters:
      - description: Auction ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Auction Detail
      tags:
      - auction
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login user dengan email dan password
      parameters:
      - description: User Login Data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: Login user
      tags:
      - auth
  /auth/logout:
    post:
      description: Menghapus token autentikasi
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Logout user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Mendaftarkan user baru dengan email dan password
      parameters:
      - description: User Registration Data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UserRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Register user baru
      tags:
      - auth
  /offer:
    post:
      consumes:
      - application/json
      description: Create offer data
      parameters:
      - description: Offer Create Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.OfferCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Create Offer
      tags:
      - offer
  /offer/{id}:
    get:
      consumes:
      - application/json
      description: Get list offer data by auction id
      parameters:
      - description: Auction ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Offer List By Auction
      tags:
      - offer
  /user:
    delete:
      consumes:
      - application/json
      description: Delete user data
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Delete user
      tags:
      - user
    get:
      consumes:
      - application/json
      description: Get list of user data
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: List user
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update user data
      parameters:
      - description: User Update Data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Update user
      tags:
      - user
  /user/me:
    get:
      consumes:
      - application/json
      description: Get user detail data
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Get logged in user
      tags:
      - user
swagger: "2.0"
